การสร้างเซิฟเวอร์ ระบบปฏิบัติการ Linux บน Google Cloud Platform เบื้องต้นแบบง่ายๆ

Google Cloud Platform เป็นหนึ่งฟีเจอร์ของบริษัทยักษ์ใหญ่อย่างกูเกิ้ล ที่เราสามารถเลือกสร้าง Server ในแบบที่เราต้องการ และเขียนโค้ดบน Servers ได้ ความจริงแล้วยังมีอีกหลายเว็บไซต์ที่คล้ายกัน เช่น Amazon...
แต่ทำไมเราเลือกใช้ Google Cloud เพราะเราสามารถใช้งานได้ฟรีถึง 1 ปี ซึ่งถือว่าคุ้มค่ามากๆ โดยเฉพาะมือใหม่อย่างรุ้งที่เรายังไม่มีประสบการณ์ในการเลือกใช้เครื่องมือ แถมใช้งานง่าย ไม่ซับซ้อน 

เราจะสร้างเซิฟเวอร์ใน Google Cloud ง่ายๆได้อย่างไร
1.เข้าไปที่เว็บไซต์ https://cloud.google.com/free/ คลิกปุ่ม View my console
2.Sign in บัญชี Gmail ของคุณ
3.คลิกที่ไอคอน สามขีด ด้านซ้ายมือเพื่อเลือก Compute Engine และจะปรากฎ VM instances ให้เราคลิก
4.จากนั้นคลิกที่ CREATE INSTANCE 
จะปรากฎหน้าให้เรากำหนดค่าส่วนต่างๆ
ตั้งชื่อ Project ตามที่เราต้องการ
ในส่วน zone เลือก asia-southeast1-a  หรือ b
ในส่วน Machine Type เลือก micro (1hared vCPU) หากเราไม่ต้องการให้เซิฟเวอร์ของเราใช้หน่วยความจำสูง
ในส่วน Boot Disk เลือก Ubuntu 17.10 แล้วกด select
ในส่วน Firewall เลือก Allow HTTP traffic
จากนั้นคลิก create
ก็จะปรากฎชื่อเซิฟเวอร์ที่เราสร้างบนหน้าเว็บ ให้เราคลิกที่ SSH เพื่อเปิดเซิฟเวอร์ที่เราสร้าง

นอกจากนี้เรายังสามารถใช้คำสั่ง(Command Line) พื้นฐานเพื่อทำงานในเซิฟเวอร์ของเรา เช่น
1)pwd =เพื่อตรวจสอบว่าเรากำลังอยู่ใน directory ใด
2)ls =เพื่อแสดงไฟล์ที่มีอยู่ใน directory หรือ folder
3)mkdir test =สร้าง directory หรือ folder ชื่อ test
4)cd =ระบุ directory ที่เราต้องการจะเปิด
5)cd .. =เป็นการเลื่อนตำแหน่ง directory ที่เราต้องการเปิด ขึ้นไป เช่น
ตอนนี้เราอยู่ใน directory ชื่อ try แต่เราต้องการจะออกจาก try ขึ้นไปยัง directory ชื่อ test
ไปที่เซิฟเวอร์ พิมพ์คำสั่ง cd .. แล้วกด Enter

pinkkunegative@instance-5:~/test/try$ cd .. 
pinkkunegative@instance-5:~/test$ 
จะเห็นว่าเรามาอยู่ที่ directory ชื่อ test แล้ว
หากต้องการกลับไปที่ directory ชื่อ try อีกครั้งให้พิมพ์คำสั่ง cd try เราก็จะกลับไปที่เดิม
 

6)rmdir test =ลบ directory ที่ไม่มีไฟล์ข้างใน 
7)rm -r test =ลบ directory ที่ยังมี folder หรือไฟล์อยู่ข้างใน
8)touch text.txt =สร้างไฟล์ที่ต้องการ
9)rm text.txt =ลบไฟล์ที่ไม่ต้องการ
10)mv text.txt store.txt =ย้ายหรือเปลี่ยนชื่อไฟล์จาก text.txt ไปยังไฟล์ store.txt
11)cp text.txt shop.txt =คัดลอกไฟล์ text.txt ไปยัง shop.txt
12)vi text.txt =คำสั่งนี้จะปรากฎหน้าต่างหนึ่งขึ้นมาเพื่อให้เราสามารถเขียนหรือแก้ไขโค้ดหรือข้อความที่เรามีในไฟล์ text.txt โดยเราต้องกด i(insert)จากนั้นเราจะสามารถพิมพ์ในหน้าต่างได้ หลังจากพิมพ์เสร็จให้กด Esc จากนั้นพิมพ์ :w กดEnter ข้อความก็จะถูกบันทึก จากนั้นพิมพ์ :q กดEnterอีกครั้งเพื่อออกจากหน้าต่าง เราก็จะกลับมายังหน้าเซิฟเวอร์เดิม
13)cat text.txt =สามารถแสดงข้อความในไฟล์ text.txt ที่เราพิมพ์ไปก่อนหน้านี้
14)cat text.txt shop.txt =เป็นการแสดงข้อความในไฟล์พร้อมกันทั้งสองไฟล์
15)cat text.txt shop.txt > branch.txt =ย้ายข้อมูลในไฟล์ text.txt และ shop.txt ไปใส่ไว้ในไฟล์ branch.txt
16)cat text.txt | sort หรือ sort < text.txt =เป็นการจัดลำดับตัวเลขหรือตัวอักษรใน text.txt
17)sort < text.txt > branch.txt =จัดลำดับตัวเลขหรือตัวอักษรใน text.txt แล้วย้ายข้อมูลไปในไฟล์ branch.txt
18)cat text.txt | grep sh =เป็นการค้นหาคำในไฟล์ text.txt ที่ประกอบด้วยตัวอักษร sh เช่น หากในไฟล์มีคำว่า 'shoes' 'shine' 'umbrella' คำสั่งนี้จะแสดงผลคำว่า 'shoes' และ 'shine'
19)cat text.txt | sort | grep sh =เราสามารถจัดลำดับตัวเลขหรือตัวอักษรก่อนจากนั้นค้นหาคำที่ประกอบด้วยตัวอักษร sh ในไฟล์ก็ได้ด้วยเช่นกัน
20)echo 'T-shirt' > shop.txt =เพิ่มข้อความในไฟล์ shop.txt

เราจะแสดงข้อมูลในเซิฟเวอร์ของเราบนเว็บไซต์ได้อย่างไร
ให้เรากลับไปดูในหน้าเว็บไซต์ที่เราสร้างเซิฟเวอร์ จะเห็นเลข IP Adress ของ server ที่เราสร้าง 
พิมพ์เลข IP Adress ในแท็บเว็บไซต์ แต่เราจะเห็นว่า เราไม่สามารถเชื่อมต่อบนเว็บไซต์ได้
กลับไปที่เซิฟเวอร์ของเราพิมพ์คำสั่ง
sudo apt install nginx แล้วรัน
จากนั้นให้พิมพ์ y เพื่อยืนยัน
reload หน้าเพจ จะแสดงผลว่าเซิฟเวอร์ของเราได้เชื่อมต่อบนอินเตอร์เน็ตแล้ว
พิมพ์คำสั่ง sudo vi /var/www/html/index.html แล้วรัน จากนั้นเราจะสามารถพิมพ์ข้อความหรือใส่โค้ด html บนหน้าเว็บไซต์ของเราได้

จะเห็นว่าขั้นตอนนั้นไม่ได้มีความยากหรือซับซ้อนมากมาย เพียงเรานั้นต้องใช้เวลาฝึกฝนบ่อยๆให้เกิดความชำนาญ เพียงเท่านี้เราก็จะสามารถสร้างเซิฟเวอร์ ระบบปฏิบัติการ Linux ได้ง่ายๆแล้ว



